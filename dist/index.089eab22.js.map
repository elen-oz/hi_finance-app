{"mappings":"C,A,S,C,C,C,C,C,C,C,C,C,E,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,A,Y,O,C,C,E,E,C,C,E,C,E,E,K,E,C,E,E,A,a,O,Q,A,Y,O,O,O,E,O,O,C,I,C,Q,S,E,C,C,C,E,G,C,C,C,E,C,C,G,C,C,C,E,C,C,I,E,A,Y,O,C,C,E,E,C,C,E,C,G,C,G,E,O,E,E,C,G,G,E,O,E,E,C,G,G,G,A,U,O,E,O,E,G,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,O,C,S,C,E,I,E,C,C,E,C,E,C,E,C,O,A,M,E,E,C,E,E,K,C,C,E,I,E,C,C,E,C,I,E,M,C,G,C,C,E,C,E,C,I,C,E,O,C,E,E,E,O,C,I,C,C,O,C,C,E,C,O,C,S,E,C,E,I,E,E,O,C,G,M,A,C,I,E,C,E,E,E,C,C,E,e,C,C,E,E,M,C,S,C,E,I,C,E,C,E,I,C,M,C,E,I,C,O,C,C,C,E,E,O,C,E,E,K,C,E,E,M,C,E,E,Q,C,S,C,C,C,E,C,C,E,C,C,S,C,C,C,E,E,O,C,C,E,C,E,A,E,O,c,C,E,O,C,I,W,O,C,C,E,A,C,G,C,C,E,C,E,I,I,E,E,E,E,M,C,I,E,C,C,E,E,G,E,C,I,E,E,E,A,C,U,O,S,A,a,O,O,O,O,C,E,A,Y,O,Q,O,G,C,O,W,O,C,G,G,C,I,C,E,C,C,C,C,E,C,M,C,S,C,C,C,C,C,E,I,E,S,C,E,AEAqG,CAAA,EAAO,MAAM,CAAC,aAAa,CAAG,mBAiDnI,IAAI,EAAa,6BACb,EAAY,EAAO,MAAM,CAAC,MAAM,CAoBpC,SAAS,IACP,OAAoB,AAAsC,IAAtC,SAAS,QAAQ,CAAC,OAAO,CAAC,QAAgB,SAAS,QAAQ,CAAG,WACpF,CACA,SAAS,IACP,OAAmB,SAAS,IAAI,AAClC,CATA,EAAO,MAAM,CAAC,MAAM,CAfpB,SAAgB,CAAU,EACxB,EAAU,IAAI,CAAC,IAAI,CAAE,GACrB,IAAI,CAAC,GAAG,CAAG,CACT,KAAM,EAAO,MAAM,CAAC,OAAO,CAAC,EAAW,CACvC,iBAAkB,EAAE,CACpB,kBAAmB,EAAE,CACrB,OAAQ,SAAU,CAAE,EAClB,IAAI,CAAC,g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","sources":["<anon>","dist/script.js","../../../../../../usr/local/lib/node_modules/parcel/node_modules/@parcel/runtime-browser-hmr/lib/runtime-0cee66ec023f871c.js","dist/script.ts"],"sourcesContent":["// modules are defined as an array\n// [ module function, map of requires ]\n//\n// map of requires is short require name -> numeric require\n//\n// anything defined in a previous bundle is accessed via the\n// orig method which is the require for previous bundles\n(function(modules, entry, mainEntry, parcelRequireName, globalName) {\n    /* eslint-disable no-undef */ var globalObject = typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {};\n    /* eslint-enable no-undef */ // Save the require from previous bundle to this closure if any\n    var previousRequire = typeof globalObject[parcelRequireName] === \"function\" && globalObject[parcelRequireName];\n    var cache = previousRequire.cache || {};\n    // Do not use `require` to prevent Webpack from trying to bundle this call\n    var nodeRequire = typeof module !== \"undefined\" && typeof module.require === \"function\" && module.require.bind(module);\n    function newRequire(name, jumped) {\n        if (!cache[name]) {\n            if (!modules[name]) {\n                // if we cannot find the module within our internal map or\n                // cache jump to the current global require ie. the last bundle\n                // that was added to the page.\n                var currentRequire = typeof globalObject[parcelRequireName] === \"function\" && globalObject[parcelRequireName];\n                if (!jumped && currentRequire) return currentRequire(name, true);\n                // If there are other bundles on this page the require from the\n                // previous one is saved to 'previousRequire'. Repeat this as\n                // many times as there are bundles until the module is found or\n                // we exhaust the require chain.\n                if (previousRequire) return previousRequire(name, true);\n                // Try the node require function if it exists.\n                if (nodeRequire && typeof name === \"string\") return nodeRequire(name);\n                var err = new Error(\"Cannot find module '\" + name + \"'\");\n                err.code = \"MODULE_NOT_FOUND\";\n                throw err;\n            }\n            localRequire.resolve = resolve;\n            localRequire.cache = {};\n            var module1 = cache[name] = new newRequire.Module(name);\n            modules[name][0].call(module1.exports, localRequire, module1, module1.exports, this);\n        }\n        return cache[name].exports;\n        function localRequire(x) {\n            var res = localRequire.resolve(x);\n            return res === false ? {} : newRequire(res);\n        }\n        function resolve(x) {\n            var id = modules[name][1][x];\n            return id != null ? id : x;\n        }\n    }\n    function Module(moduleName) {\n        this.id = moduleName;\n        this.bundle = newRequire;\n        this.exports = {};\n    }\n    newRequire.isParcelRequire = true;\n    newRequire.Module = Module;\n    newRequire.modules = modules;\n    newRequire.cache = cache;\n    newRequire.parent = previousRequire;\n    newRequire.register = function(id, exports1) {\n        modules[id] = [\n            function(require, module1) {\n                module1.exports = exports1;\n            },\n            {}\n        ];\n    };\n    Object.defineProperty(newRequire, \"root\", {\n        get: function() {\n            return globalObject[parcelRequireName];\n        }\n    });\n    globalObject[parcelRequireName] = newRequire;\n    for(var i = 0; i < entry.length; i++)newRequire(entry[i]);\n    if (mainEntry) {\n        // Expose entry point to Node, AMD or browser globals\n        // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js\n        var mainExports = newRequire(mainEntry);\n        // CommonJS\n        if (typeof exports === \"object\" && typeof module !== \"undefined\") module.exports = mainExports;\n        else if (typeof define === \"function\" && define.amd) define(function() {\n            return mainExports;\n        });\n        else if (globalName) this[globalName] = mainExports;\n    }\n})({\n    \"cBg3B\": [\n        function(require, module1, exports1) {\n            var global1 = arguments[3];\n            var HMR_HOST = null;\n            var HMR_PORT = null;\n            var HMR_SECURE = false;\n            var HMR_ENV_HASH = \"d6ea1d42532a7575\";\n            module1.bundle.HMR_BUNDLE_ID = \"2d574cee894640a9\";\n            \"use strict\";\n            /* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */ /*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/ var OVERLAY_ID = \"__parcel__error__overlay__\";\n            var OldModule = module1.bundle.Module;\n            function Module(moduleName) {\n                OldModule.call(this, moduleName);\n                this.hot = {\n                    data: module1.bundle.hotData[moduleName],\n                    _acceptCallbacks: [],\n                    _disposeCallbacks: [],\n                    accept: function(fn) {\n                        this._acceptCallbacks.push(fn || function() {});\n                    },\n                    dispose: function(fn) {\n                        this._disposeCallbacks.push(fn);\n                    }\n                };\n                module1.bundle.hotData[moduleName] = undefined;\n            }\n            module1.bundle.Module = Module;\n            module1.bundle.hotData = {};\n            var checkedAssets /*: {|[string]: boolean|} */ , assetsToDispose /*: Array<[ParcelRequire, string]> */ , assetsToAccept /*: Array<[ParcelRequire, string]> */ ;\n            function getHostname() {\n                return HMR_HOST || (location.protocol.indexOf(\"http\") === 0 ? location.hostname : \"localhost\");\n            }\n            function getPort() {\n                return HMR_PORT || location.port;\n            }\n            // eslint-disable-next-line no-redeclare\n            var parent = module1.bundle.parent;\n            if ((!parent || !parent.isParcelRequire) && typeof WebSocket !== \"undefined\") {\n                var hostname = getHostname();\n                var port = getPort();\n                var protocol = HMR_SECURE || location.protocol == \"https:\" && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? \"wss\" : \"ws\";\n                var ws;\n                try {\n                    ws = new WebSocket(protocol + \"://\" + hostname + (port ? \":\" + port : \"\") + \"/\");\n                } catch (err) {\n                    if (err.message) console.error(err.message);\n                    ws = {};\n                }\n                // Web extension context\n                var extCtx = typeof browser === \"undefined\" ? typeof chrome === \"undefined\" ? null : chrome : browser;\n                // Safari doesn't support sourceURL in error stacks.\n                // eval may also be disabled via CSP, so do a quick check.\n                var supportsSourceURL = false;\n                try {\n                    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n                } catch (err) {\n                    supportsSourceURL = err.stack.includes(\"test.js\");\n                }\n                // $FlowFixMe\n                ws.onmessage = async function(event /*: {data: string, ...} */ ) {\n                    checkedAssets = {} /*: {|[string]: boolean|} */ ;\n                    assetsToAccept = [];\n                    assetsToDispose = [];\n                    var data /*: HMRMessage */  = JSON.parse(event.data);\n                    if (data.type === \"update\") {\n                        // Remove error overlay if there is one\n                        if (typeof document !== \"undefined\") removeErrorOverlay();\n                        let assets = data.assets.filter((asset)=>asset.envHash === HMR_ENV_HASH);\n                        // Handle HMR Update\n                        let handled = assets.every((asset)=>{\n                            return asset.type === \"css\" || asset.type === \"js\" && hmrAcceptCheck(module1.bundle.root, asset.id, asset.depsByBundle);\n                        });\n                        if (handled) {\n                            console.clear();\n                            // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n                            if (typeof window !== \"undefined\" && typeof CustomEvent !== \"undefined\") window.dispatchEvent(new CustomEvent(\"parcelhmraccept\"));\n                            await hmrApplyUpdates(assets);\n                            // Dispose all old assets.\n                            let processedAssets = {} /*: {|[string]: boolean|} */ ;\n                            for(let i = 0; i < assetsToDispose.length; i++){\n                                let id = assetsToDispose[i][1];\n                                if (!processedAssets[id]) {\n                                    hmrDispose(assetsToDispose[i][0], id);\n                                    processedAssets[id] = true;\n                                }\n                            }\n                            // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n                            processedAssets = {};\n                            for(let i = 0; i < assetsToAccept.length; i++){\n                                let id = assetsToAccept[i][1];\n                                if (!processedAssets[id]) {\n                                    hmrAccept(assetsToAccept[i][0], id);\n                                    processedAssets[id] = true;\n                                }\n                            }\n                        } else fullReload();\n                    }\n                    if (data.type === \"error\") {\n                        // Log parcel errors to console\n                        for (let ansiDiagnostic of data.diagnostics.ansi){\n                            let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n                            console.error(\"\\uD83D\\uDEA8 [parcel]: \" + ansiDiagnostic.message + \"\\n\" + stack + \"\\n\\n\" + ansiDiagnostic.hints.join(\"\\n\"));\n                        }\n                        if (typeof document !== \"undefined\") {\n                            // Render the fancy html overlay\n                            removeErrorOverlay();\n                            var overlay = createErrorOverlay(data.diagnostics.html);\n                            // $FlowFixMe\n                            document.body.appendChild(overlay);\n                        }\n                    }\n                };\n                ws.onerror = function(e) {\n                    if (e.message) console.error(e.message);\n                };\n                ws.onclose = function() {\n                    console.warn(\"[parcel] \\uD83D\\uDEA8 Connection to the HMR server was lost\");\n                };\n            }\n            function removeErrorOverlay() {\n                var overlay = document.getElementById(OVERLAY_ID);\n                if (overlay) {\n                    overlay.remove();\n                    console.log(\"[parcel] \\u2728 Error resolved\");\n                }\n            }\n            function createErrorOverlay(diagnostics) {\n                var overlay = document.createElement(\"div\");\n                overlay.id = OVERLAY_ID;\n                let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n                for (let diagnostic of diagnostics){\n                    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame)=>{\n                        return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n                    }, \"\") : diagnostic.stack;\n                    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          \\u{1F6A8} ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map((hint)=>\"<div>\\uD83D\\uDCA1 \" + hint + \"</div>\").join(\"\")}\n        </div>\n        ${diagnostic.documentation ? `<div>\\u{1F4DD} <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : \"\"}\n      </div>\n    `;\n                }\n                errorHTML += \"</div>\";\n                overlay.innerHTML = errorHTML;\n                return overlay;\n            }\n            function fullReload() {\n                if (\"reload\" in location) location.reload();\n                else if (extCtx && extCtx.runtime && extCtx.runtime.reload) extCtx.runtime.reload();\n            }\n            function getParents(bundle, id) /*: Array<[ParcelRequire, string]> */ {\n                var modules = bundle.modules;\n                if (!modules) return [];\n                var parents = [];\n                var k, d, dep;\n                for(k in modules)for(d in modules[k][1]){\n                    dep = modules[k][1][d];\n                    if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) parents.push([\n                        bundle,\n                        k\n                    ]);\n                }\n                if (bundle.parent) parents = parents.concat(getParents(bundle.parent, id));\n                return parents;\n            }\n            function updateLink(link) {\n                var href = link.getAttribute(\"href\");\n                if (!href) return;\n                var newLink = link.cloneNode();\n                newLink.onload = function() {\n                    if (link.parentNode !== null) link.parentNode.removeChild(link);\n                };\n                newLink.setAttribute(\"href\", href.split(\"?\")[0] + \"?\" + Date.now());\n                // $FlowFixMe\n                link.parentNode.insertBefore(newLink, link.nextSibling);\n            }\n            var cssTimeout = null;\n            function reloadCSS() {\n                if (cssTimeout) return;\n                cssTimeout = setTimeout(function() {\n                    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n                    for(var i = 0; i < links.length; i++){\n                        // $FlowFixMe[incompatible-type]\n                        var href /*: string */  = links[i].getAttribute(\"href\");\n                        var hostname = getHostname();\n                        var servedFromHMRServer = hostname === \"localhost\" ? new RegExp(\"^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):\" + getPort()).test(href) : href.indexOf(hostname + \":\" + getPort());\n                        var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n                        if (!absolute) updateLink(links[i]);\n                    }\n                    cssTimeout = null;\n                }, 50);\n            }\n            function hmrDownload(asset) {\n                if (asset.type === \"js\") {\n                    if (typeof document !== \"undefined\") {\n                        let script = document.createElement(\"script\");\n                        script.src = asset.url + \"?t=\" + Date.now();\n                        if (asset.outputFormat === \"esmodule\") script.type = \"module\";\n                        return new Promise((resolve, reject)=>{\n                            var _document$head;\n                            script.onload = ()=>resolve(script);\n                            script.onerror = reject;\n                            (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);\n                        });\n                    } else if (typeof importScripts === \"function\") {\n                        // Worker scripts\n                        if (asset.outputFormat === \"esmodule\") return __parcel__require__(asset.url + \"?t=\" + Date.now());\n                        else return new Promise((resolve, reject)=>{\n                            try {\n                                importScripts(asset.url + \"?t=\" + Date.now());\n                                resolve();\n                            } catch (err) {\n                                reject(err);\n                            }\n                        });\n                    }\n                }\n            }\n            async function hmrApplyUpdates(assets) {\n                global1.parcelHotUpdate = Object.create(null);\n                let scriptsToRemove;\n                try {\n                    // If sourceURL comments aren't supported in eval, we need to load\n                    // the update from the dev server over HTTP so that stack traces\n                    // are correct in errors/logs. This is much slower than eval, so\n                    // we only do it if needed (currently just Safari).\n                    // https://bugs.webkit.org/show_bug.cgi?id=137297\n                    // This path is also taken if a CSP disallows eval.\n                    if (!supportsSourceURL) {\n                        let promises = assets.map((asset)=>{\n                            var _hmrDownload;\n                            return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch((err)=>{\n                                // Web extension fix\n                                if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3 && typeof ServiceWorkerGlobalScope != \"undefined\" && global1 instanceof ServiceWorkerGlobalScope) {\n                                    extCtx.runtime.reload();\n                                    return;\n                                }\n                                throw err;\n                            });\n                        });\n                        scriptsToRemove = await Promise.all(promises);\n                    }\n                    assets.forEach(function(asset) {\n                        hmrApply(module1.bundle.root, asset);\n                    });\n                } finally{\n                    delete global1.parcelHotUpdate;\n                    if (scriptsToRemove) scriptsToRemove.forEach((script)=>{\n                        if (script) {\n                            var _document$head2;\n                            (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);\n                        }\n                    });\n                }\n            }\n            function hmrApply(bundle /*: ParcelRequire */ , asset /*:  HMRAsset */ ) {\n                var modules = bundle.modules;\n                if (!modules) return;\n                if (asset.type === \"css\") reloadCSS();\n                else if (asset.type === \"js\") {\n                    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n                    if (deps) {\n                        if (modules[asset.id]) {\n                            // Remove dependencies that are removed and will become orphaned.\n                            // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n                            let oldDeps = modules[asset.id][1];\n                            for(let dep in oldDeps)if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n                                let id = oldDeps[dep];\n                                let parents = getParents(module1.bundle.root, id);\n                                if (parents.length === 1) hmrDelete(module1.bundle.root, id);\n                            }\n                        }\n                        if (supportsSourceURL) // support for source maps is better with eval.\n                        (0, eval)(asset.output);\n                        // $FlowFixMe\n                        let fn = global1.parcelHotUpdate[asset.id];\n                        modules[asset.id] = [\n                            fn,\n                            deps\n                        ];\n                    } else if (bundle.parent) hmrApply(bundle.parent, asset);\n                }\n            }\n            function hmrDelete(bundle, id) {\n                let modules = bundle.modules;\n                if (!modules) return;\n                if (modules[id]) {\n                    // Collect dependencies that will become orphaned when this module is deleted.\n                    let deps = modules[id][1];\n                    let orphans = [];\n                    for(let dep in deps){\n                        let parents = getParents(module1.bundle.root, deps[dep]);\n                        if (parents.length === 1) orphans.push(deps[dep]);\n                    }\n                    // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n                    delete modules[id];\n                    delete bundle.cache[id];\n                    // Now delete the orphans.\n                    orphans.forEach((id)=>{\n                        hmrDelete(module1.bundle.root, id);\n                    });\n                } else if (bundle.parent) hmrDelete(bundle.parent, id);\n            }\n            function hmrAcceptCheck(bundle /*: ParcelRequire */ , id /*: string */ , depsByBundle /*: ?{ [string]: { [string]: string } }*/ ) {\n                if (hmrAcceptCheckOne(bundle, id, depsByBundle)) return true;\n                // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n                let parents = getParents(module1.bundle.root, id);\n                let accepted = false;\n                while(parents.length > 0){\n                    let v = parents.shift();\n                    let a = hmrAcceptCheckOne(v[0], v[1], null);\n                    if (a) accepted = true;\n                    else {\n                        // Otherwise, queue the parents in the next level upward.\n                        let p = getParents(module1.bundle.root, v[1]);\n                        if (p.length === 0) {\n                            // If there are no parents, then we've reached an entry without accepting. Reload.\n                            accepted = false;\n                            break;\n                        }\n                        parents.push(...p);\n                    }\n                }\n                return accepted;\n            }\n            function hmrAcceptCheckOne(bundle /*: ParcelRequire */ , id /*: string */ , depsByBundle /*: ?{ [string]: { [string]: string } }*/ ) {\n                var modules = bundle.modules;\n                if (!modules) return;\n                if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n                    // If we reached the root bundle without finding where the asset should go,\n                    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n                    if (!bundle.parent) return true;\n                    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n                }\n                if (checkedAssets[id]) return true;\n                checkedAssets[id] = true;\n                var cached = bundle.cache[id];\n                assetsToDispose.push([\n                    bundle,\n                    id\n                ]);\n                if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n                    assetsToAccept.push([\n                        bundle,\n                        id\n                    ]);\n                    return true;\n                }\n            }\n            function hmrDispose(bundle /*: ParcelRequire */ , id /*: string */ ) {\n                var cached = bundle.cache[id];\n                bundle.hotData[id] = {};\n                if (cached && cached.hot) cached.hot.data = bundle.hotData[id];\n                if (cached && cached.hot && cached.hot._disposeCallbacks.length) cached.hot._disposeCallbacks.forEach(function(cb) {\n                    cb(bundle.hotData[id]);\n                });\n                delete bundle.cache[id];\n            }\n            function hmrAccept(bundle /*: ParcelRequire */ , id /*: string */ ) {\n                // Execute the module.\n                bundle(id);\n                // Run the accept callbacks in the new version of the module.\n                var cached = bundle.cache[id];\n                if (cached && cached.hot && cached.hot._acceptCallbacks.length) cached.hot._acceptCallbacks.forEach(function(cb) {\n                    var assetsToAlsoAccept = cb(function() {\n                        return getParents(module1.bundle.root, id);\n                    });\n                    if (assetsToAlsoAccept && assetsToAccept.length) {\n                        assetsToAlsoAccept.forEach(function(a) {\n                            hmrDispose(a[0], a[1]);\n                        });\n                        // $FlowFixMe[method-unbinding]\n                        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n                    }\n                });\n            }\n        },\n        {}\n    ],\n    \"7wTDB\": [\n        function(require, module1, exports1) {\n            const subscribeInputFormEl = document.getElementById(\"subscribe__input\");\n            const subscribeButtonFormEl = document.getElementById(\"subscribe__button\");\n            if (subscribeButtonFormEl) subscribeButtonFormEl.addEventListener(\"click\", (e)=>{\n                e.preventDefault();\n                if (subscribeInputFormEl && subscribeInputFormEl.value.trim() === \"\") alert(\"Please type your email address.\");\n                else if (subscribeInputFormEl && !subscribeInputFormEl.value.includes(\"@\")) alert(\"Incorrect e-mail! Try again.\");\n                else alert(\"Subscription successful!\");\n            });\n            const announcementEl = document.getElementById(\"announcement\");\n            const announcementCloseBtnEl = document.getElementById(\"announcement__btn--close\");\n            if (announcementCloseBtnEl) announcementCloseBtnEl.addEventListener(\"click\", (e)=>{\n                if (announcementEl) announcementEl.classList.add(\"close\");\n            });\n        },\n        {}\n    ]\n}, [\n    \"cBg3B\",\n    \"7wTDB\"\n], \"7wTDB\", \"parcelRequire4013\");\n\n//# sourceMappingURL=index.089eab22.js.map\n","// modules are defined as an array\n// [ module function, map of requires ]\n//\n// map of requires is short require name -> numeric require\n//\n// anything defined in a previous bundle is accessed via the\n// orig method which is the require for previous bundles\n\n(function (modules, entry, mainEntry, parcelRequireName, globalName) {\n  /* eslint-disable no-undef */\n  var globalObject =\n    typeof globalThis !== 'undefined'\n      ? globalThis\n      : typeof self !== 'undefined'\n      ? self\n      : typeof window !== 'undefined'\n      ? window\n      : typeof global !== 'undefined'\n      ? global\n      : {};\n  /* eslint-enable no-undef */\n\n  // Save the require from previous bundle to this closure if any\n  var previousRequire =\n    typeof globalObject[parcelRequireName] === 'function' &&\n    globalObject[parcelRequireName];\n\n  var cache = previousRequire.cache || {};\n  // Do not use `require` to prevent Webpack from trying to bundle this call\n  var nodeRequire =\n    typeof module !== 'undefined' &&\n    typeof module.require === 'function' &&\n    module.require.bind(module);\n\n  function newRequire(name, jumped) {\n    if (!cache[name]) {\n      if (!modules[name]) {\n        // if we cannot find the module within our internal map or\n        // cache jump to the current global require ie. the last bundle\n        // that was added to the page.\n        var currentRequire =\n          typeof globalObject[parcelRequireName] === 'function' &&\n          globalObject[parcelRequireName];\n        if (!jumped && currentRequire) {\n          return currentRequire(name, true);\n        }\n\n        // If there are other bundles on this page the require from the\n        // previous one is saved to 'previousRequire'. Repeat this as\n        // many times as there are bundles until the module is found or\n        // we exhaust the require chain.\n        if (previousRequire) {\n          return previousRequire(name, true);\n        }\n\n        // Try the node require function if it exists.\n        if (nodeRequire && typeof name === 'string') {\n          return nodeRequire(name);\n        }\n\n        var err = new Error(\"Cannot find module '\" + name + \"'\");\n        err.code = 'MODULE_NOT_FOUND';\n        throw err;\n      }\n\n      localRequire.resolve = resolve;\n      localRequire.cache = {};\n\n      var module = (cache[name] = new newRequire.Module(name));\n\n      modules[name][0].call(\n        module.exports,\n        localRequire,\n        module,\n        module.exports,\n        this\n      );\n    }\n\n    return cache[name].exports;\n\n    function localRequire(x) {\n      var res = localRequire.resolve(x);\n      return res === false ? {} : newRequire(res);\n    }\n\n    function resolve(x) {\n      var id = modules[name][1][x];\n      return id != null ? id : x;\n    }\n  }\n\n  function Module(moduleName) {\n    this.id = moduleName;\n    this.bundle = newRequire;\n    this.exports = {};\n  }\n\n  newRequire.isParcelRequire = true;\n  newRequire.Module = Module;\n  newRequire.modules = modules;\n  newRequire.cache = cache;\n  newRequire.parent = previousRequire;\n  newRequire.register = function (id, exports) {\n    modules[id] = [\n      function (require, module) {\n        module.exports = exports;\n      },\n      {},\n    ];\n  };\n\n  Object.defineProperty(newRequire, 'root', {\n    get: function () {\n      return globalObject[parcelRequireName];\n    },\n  });\n\n  globalObject[parcelRequireName] = newRequire;\n\n  for (var i = 0; i < entry.length; i++) {\n    newRequire(entry[i]);\n  }\n\n  if (mainEntry) {\n    // Expose entry point to Node, AMD or browser globals\n    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js\n    var mainExports = newRequire(mainEntry);\n\n    // CommonJS\n    if (typeof exports === 'object' && typeof module !== 'undefined') {\n      module.exports = mainExports;\n\n      // RequireJS\n    } else if (typeof define === 'function' && define.amd) {\n      define(function () {\n        return mainExports;\n      });\n\n      // <script>\n    } else if (globalName) {\n      this[globalName] = mainExports;\n    }\n  }\n})({\"cBg3B\":[function(require,module,exports) {\nvar global = arguments[3];\nvar HMR_HOST = null;\nvar HMR_PORT = null;\nvar HMR_SECURE = false;\nvar HMR_ENV_HASH = \"d6ea1d42532a7575\";\nmodule.bundle.HMR_BUNDLE_ID = \"2d574cee894640a9\";\n\"use strict\";\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */ /*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/ var OVERLAY_ID = \"__parcel__error__overlay__\";\nvar OldModule = module.bundle.Module;\nfunction Module(moduleName) {\n    OldModule.call(this, moduleName);\n    this.hot = {\n        data: module.bundle.hotData[moduleName],\n        _acceptCallbacks: [],\n        _disposeCallbacks: [],\n        accept: function(fn) {\n            this._acceptCallbacks.push(fn || function() {});\n        },\n        dispose: function(fn) {\n            this._disposeCallbacks.push(fn);\n        }\n    };\n    module.bundle.hotData[moduleName] = undefined;\n}\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets /*: {|[string]: boolean|} */ , assetsToDispose /*: Array<[ParcelRequire, string]> */ , assetsToAccept /*: Array<[ParcelRequire, string]> */ ;\nfunction getHostname() {\n    return HMR_HOST || (location.protocol.indexOf(\"http\") === 0 ? location.hostname : \"localhost\");\n}\nfunction getPort() {\n    return HMR_PORT || location.port;\n}\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== \"undefined\") {\n    var hostname = getHostname();\n    var port = getPort();\n    var protocol = HMR_SECURE || location.protocol == \"https:\" && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? \"wss\" : \"ws\";\n    var ws;\n    try {\n        ws = new WebSocket(protocol + \"://\" + hostname + (port ? \":\" + port : \"\") + \"/\");\n    } catch (err) {\n        if (err.message) console.error(err.message);\n        ws = {};\n    }\n    // Web extension context\n    var extCtx = typeof browser === \"undefined\" ? typeof chrome === \"undefined\" ? null : chrome : browser;\n    // Safari doesn't support sourceURL in error stacks.\n    // eval may also be disabled via CSP, so do a quick check.\n    var supportsSourceURL = false;\n    try {\n        (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n    } catch (err) {\n        supportsSourceURL = err.stack.includes(\"test.js\");\n    }\n    // $FlowFixMe\n    ws.onmessage = async function(event /*: {data: string, ...} */ ) {\n        checkedAssets = {} /*: {|[string]: boolean|} */ ;\n        assetsToAccept = [];\n        assetsToDispose = [];\n        var data /*: HMRMessage */  = JSON.parse(event.data);\n        if (data.type === \"update\") {\n            // Remove error overlay if there is one\n            if (typeof document !== \"undefined\") removeErrorOverlay();\n            let assets = data.assets.filter((asset)=>asset.envHash === HMR_ENV_HASH);\n            // Handle HMR Update\n            let handled = assets.every((asset)=>{\n                return asset.type === \"css\" || asset.type === \"js\" && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n            });\n            if (handled) {\n                console.clear();\n                // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n                if (typeof window !== \"undefined\" && typeof CustomEvent !== \"undefined\") window.dispatchEvent(new CustomEvent(\"parcelhmraccept\"));\n                await hmrApplyUpdates(assets);\n                // Dispose all old assets.\n                let processedAssets = {} /*: {|[string]: boolean|} */ ;\n                for(let i = 0; i < assetsToDispose.length; i++){\n                    let id = assetsToDispose[i][1];\n                    if (!processedAssets[id]) {\n                        hmrDispose(assetsToDispose[i][0], id);\n                        processedAssets[id] = true;\n                    }\n                }\n                // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n                processedAssets = {};\n                for(let i = 0; i < assetsToAccept.length; i++){\n                    let id = assetsToAccept[i][1];\n                    if (!processedAssets[id]) {\n                        hmrAccept(assetsToAccept[i][0], id);\n                        processedAssets[id] = true;\n                    }\n                }\n            } else fullReload();\n        }\n        if (data.type === \"error\") {\n            // Log parcel errors to console\n            for (let ansiDiagnostic of data.diagnostics.ansi){\n                let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n                console.error(\"\\uD83D\\uDEA8 [parcel]: \" + ansiDiagnostic.message + \"\\n\" + stack + \"\\n\\n\" + ansiDiagnostic.hints.join(\"\\n\"));\n            }\n            if (typeof document !== \"undefined\") {\n                // Render the fancy html overlay\n                removeErrorOverlay();\n                var overlay = createErrorOverlay(data.diagnostics.html);\n                // $FlowFixMe\n                document.body.appendChild(overlay);\n            }\n        }\n    };\n    ws.onerror = function(e) {\n        if (e.message) console.error(e.message);\n    };\n    ws.onclose = function() {\n        console.warn(\"[parcel] \\uD83D\\uDEA8 Connection to the HMR server was lost\");\n    };\n}\nfunction removeErrorOverlay() {\n    var overlay = document.getElementById(OVERLAY_ID);\n    if (overlay) {\n        overlay.remove();\n        console.log(\"[parcel] \\u2728 Error resolved\");\n    }\n}\nfunction createErrorOverlay(diagnostics) {\n    var overlay = document.createElement(\"div\");\n    overlay.id = OVERLAY_ID;\n    let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n    for (let diagnostic of diagnostics){\n        let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame)=>{\n            return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n        }, \"\") : diagnostic.stack;\n        errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          \\u{1F6A8} ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map((hint)=>\"<div>\\uD83D\\uDCA1 \" + hint + \"</div>\").join(\"\")}\n        </div>\n        ${diagnostic.documentation ? `<div>\\u{1F4DD} <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : \"\"}\n      </div>\n    `;\n    }\n    errorHTML += \"</div>\";\n    overlay.innerHTML = errorHTML;\n    return overlay;\n}\nfunction fullReload() {\n    if (\"reload\" in location) location.reload();\n    else if (extCtx && extCtx.runtime && extCtx.runtime.reload) extCtx.runtime.reload();\n}\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */ {\n    var modules = bundle.modules;\n    if (!modules) return [];\n    var parents = [];\n    var k, d, dep;\n    for(k in modules)for(d in modules[k][1]){\n        dep = modules[k][1][d];\n        if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) parents.push([\n            bundle,\n            k\n        ]);\n    }\n    if (bundle.parent) parents = parents.concat(getParents(bundle.parent, id));\n    return parents;\n}\nfunction updateLink(link) {\n    var href = link.getAttribute(\"href\");\n    if (!href) return;\n    var newLink = link.cloneNode();\n    newLink.onload = function() {\n        if (link.parentNode !== null) // $FlowFixMe\n        link.parentNode.removeChild(link);\n    };\n    newLink.setAttribute(\"href\", // $FlowFixMe\n    href.split(\"?\")[0] + \"?\" + Date.now());\n    // $FlowFixMe\n    link.parentNode.insertBefore(newLink, link.nextSibling);\n}\nvar cssTimeout = null;\nfunction reloadCSS() {\n    if (cssTimeout) return;\n    cssTimeout = setTimeout(function() {\n        var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n        for(var i = 0; i < links.length; i++){\n            // $FlowFixMe[incompatible-type]\n            var href /*: string */  = links[i].getAttribute(\"href\");\n            var hostname = getHostname();\n            var servedFromHMRServer = hostname === \"localhost\" ? new RegExp(\"^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):\" + getPort()).test(href) : href.indexOf(hostname + \":\" + getPort());\n            var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n            if (!absolute) updateLink(links[i]);\n        }\n        cssTimeout = null;\n    }, 50);\n}\nfunction hmrDownload(asset) {\n    if (asset.type === \"js\") {\n        if (typeof document !== \"undefined\") {\n            let script = document.createElement(\"script\");\n            script.src = asset.url + \"?t=\" + Date.now();\n            if (asset.outputFormat === \"esmodule\") script.type = \"module\";\n            return new Promise((resolve, reject)=>{\n                var _document$head;\n                script.onload = ()=>resolve(script);\n                script.onerror = reject;\n                (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);\n            });\n        } else if (typeof importScripts === \"function\") {\n            // Worker scripts\n            if (asset.outputFormat === \"esmodule\") return import(asset.url + \"?t=\" + Date.now());\n            else return new Promise((resolve, reject)=>{\n                try {\n                    importScripts(asset.url + \"?t=\" + Date.now());\n                    resolve();\n                } catch (err) {\n                    reject(err);\n                }\n            });\n        }\n    }\n}\nasync function hmrApplyUpdates(assets) {\n    global.parcelHotUpdate = Object.create(null);\n    let scriptsToRemove;\n    try {\n        // If sourceURL comments aren't supported in eval, we need to load\n        // the update from the dev server over HTTP so that stack traces\n        // are correct in errors/logs. This is much slower than eval, so\n        // we only do it if needed (currently just Safari).\n        // https://bugs.webkit.org/show_bug.cgi?id=137297\n        // This path is also taken if a CSP disallows eval.\n        if (!supportsSourceURL) {\n            let promises = assets.map((asset)=>{\n                var _hmrDownload;\n                return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch((err)=>{\n                    // Web extension fix\n                    if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3 && typeof ServiceWorkerGlobalScope != \"undefined\" && global instanceof ServiceWorkerGlobalScope) {\n                        extCtx.runtime.reload();\n                        return;\n                    }\n                    throw err;\n                });\n            });\n            scriptsToRemove = await Promise.all(promises);\n        }\n        assets.forEach(function(asset) {\n            hmrApply(module.bundle.root, asset);\n        });\n    } finally{\n        delete global.parcelHotUpdate;\n        if (scriptsToRemove) scriptsToRemove.forEach((script)=>{\n            if (script) {\n                var _document$head2;\n                (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);\n            }\n        });\n    }\n}\nfunction hmrApply(bundle /*: ParcelRequire */ , asset /*:  HMRAsset */ ) {\n    var modules = bundle.modules;\n    if (!modules) return;\n    if (asset.type === \"css\") reloadCSS();\n    else if (asset.type === \"js\") {\n        let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n        if (deps) {\n            if (modules[asset.id]) {\n                // Remove dependencies that are removed and will become orphaned.\n                // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n                let oldDeps = modules[asset.id][1];\n                for(let dep in oldDeps)if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n                    let id = oldDeps[dep];\n                    let parents = getParents(module.bundle.root, id);\n                    if (parents.length === 1) hmrDelete(module.bundle.root, id);\n                }\n            }\n            if (supportsSourceURL) // Global eval. We would use `new Function` here but browser\n            // support for source maps is better with eval.\n            (0, eval)(asset.output);\n            // $FlowFixMe\n            let fn = global.parcelHotUpdate[asset.id];\n            modules[asset.id] = [\n                fn,\n                deps\n            ];\n        } else if (bundle.parent) hmrApply(bundle.parent, asset);\n    }\n}\nfunction hmrDelete(bundle, id) {\n    let modules = bundle.modules;\n    if (!modules) return;\n    if (modules[id]) {\n        // Collect dependencies that will become orphaned when this module is deleted.\n        let deps = modules[id][1];\n        let orphans = [];\n        for(let dep in deps){\n            let parents = getParents(module.bundle.root, deps[dep]);\n            if (parents.length === 1) orphans.push(deps[dep]);\n        }\n        // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n        delete modules[id];\n        delete bundle.cache[id];\n        // Now delete the orphans.\n        orphans.forEach((id)=>{\n            hmrDelete(module.bundle.root, id);\n        });\n    } else if (bundle.parent) hmrDelete(bundle.parent, id);\n}\nfunction hmrAcceptCheck(bundle /*: ParcelRequire */ , id /*: string */ , depsByBundle /*: ?{ [string]: { [string]: string } }*/ ) {\n    if (hmrAcceptCheckOne(bundle, id, depsByBundle)) return true;\n    // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n    let parents = getParents(module.bundle.root, id);\n    let accepted = false;\n    while(parents.length > 0){\n        let v = parents.shift();\n        let a = hmrAcceptCheckOne(v[0], v[1], null);\n        if (a) // If this parent accepts, stop traversing upward, but still consider siblings.\n        accepted = true;\n        else {\n            // Otherwise, queue the parents in the next level upward.\n            let p = getParents(module.bundle.root, v[1]);\n            if (p.length === 0) {\n                // If there are no parents, then we've reached an entry without accepting. Reload.\n                accepted = false;\n                break;\n            }\n            parents.push(...p);\n        }\n    }\n    return accepted;\n}\nfunction hmrAcceptCheckOne(bundle /*: ParcelRequire */ , id /*: string */ , depsByBundle /*: ?{ [string]: { [string]: string } }*/ ) {\n    var modules = bundle.modules;\n    if (!modules) return;\n    if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n        // If we reached the root bundle without finding where the asset should go,\n        // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n        if (!bundle.parent) return true;\n        return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n    }\n    if (checkedAssets[id]) return true;\n    checkedAssets[id] = true;\n    var cached = bundle.cache[id];\n    assetsToDispose.push([\n        bundle,\n        id\n    ]);\n    if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n        assetsToAccept.push([\n            bundle,\n            id\n        ]);\n        return true;\n    }\n}\nfunction hmrDispose(bundle /*: ParcelRequire */ , id /*: string */ ) {\n    var cached = bundle.cache[id];\n    bundle.hotData[id] = {};\n    if (cached && cached.hot) cached.hot.data = bundle.hotData[id];\n    if (cached && cached.hot && cached.hot._disposeCallbacks.length) cached.hot._disposeCallbacks.forEach(function(cb) {\n        cb(bundle.hotData[id]);\n    });\n    delete bundle.cache[id];\n}\nfunction hmrAccept(bundle /*: ParcelRequire */ , id /*: string */ ) {\n    // Execute the module.\n    bundle(id);\n    // Run the accept callbacks in the new version of the module.\n    var cached = bundle.cache[id];\n    if (cached && cached.hot && cached.hot._acceptCallbacks.length) cached.hot._acceptCallbacks.forEach(function(cb) {\n        var assetsToAlsoAccept = cb(function() {\n            return getParents(module.bundle.root, id);\n        });\n        if (assetsToAlsoAccept && assetsToAccept.length) {\n            assetsToAlsoAccept.forEach(function(a) {\n                hmrDispose(a[0], a[1]);\n            });\n            // $FlowFixMe[method-unbinding]\n            assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n        }\n    });\n}\n\n},{}],\"7wTDB\":[function(require,module,exports) {\nconst subscribeInputFormEl = document.getElementById(\"subscribe__input\");\nconst subscribeButtonFormEl = document.getElementById(\"subscribe__button\");\nif (subscribeButtonFormEl) subscribeButtonFormEl.addEventListener(\"click\", (e)=>{\n    e.preventDefault();\n    if (subscribeInputFormEl && subscribeInputFormEl.value.trim() === \"\") alert(\"Please type your email address.\");\n    else if (subscribeInputFormEl && !subscribeInputFormEl.value.includes(\"@\")) alert(\"Incorrect e-mail! Try again.\");\n    else alert(\"Subscription successful!\");\n});\nconst announcementEl = document.getElementById(\"announcement\");\nconst announcementCloseBtnEl = document.getElementById(\"announcement__btn--close\");\nif (announcementCloseBtnEl) announcementCloseBtnEl.addEventListener(\"click\", (e)=>{\n    if (announcementEl) announcementEl.classList.add(\"close\");\n});\n\n},{}]},[\"cBg3B\",\"7wTDB\"], \"7wTDB\", \"parcelRequire4013\")\n\n//# sourceMappingURL=script.js.map\n","var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"2d574cee894640a9\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets /*: {|[string]: boolean|} */, assetsToDispose /*: Array<[ParcelRequire, string]> */, assetsToAccept /*: Array<[ParcelRequire, string]> */;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\nfunction getPort() {\n  return HMR_PORT || location.port;\n}\n\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws;\n  try {\n    ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');\n  } catch (err) {\n    if (err.message) {\n      console.error(err.message);\n    }\n    ws = {};\n  }\n\n  // Web extension context\n  var extCtx = typeof browser === 'undefined' ? typeof chrome === 'undefined' ? null : chrome : browser;\n\n  // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n  var supportsSourceURL = false;\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  }\n\n  // $FlowFixMe\n  ws.onmessage = async function (event /*: {data: string, ...} */) {\n    checkedAssets = {} /*: {|[string]: boolean|} */;\n    assetsToAccept = [];\n    assetsToDispose = [];\n    var data /*: HMRMessage */ = JSON.parse(event.data);\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH);\n\n      // Handle HMR Update\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n      if (handled) {\n        console.clear();\n\n        // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n        await hmrApplyUpdates(assets);\n\n        // Dispose all old assets.\n        let processedAssets = {} /*: {|[string]: boolean|} */;\n        for (let i = 0; i < assetsToDispose.length; i++) {\n          let id = assetsToDispose[i][1];\n          if (!processedAssets[id]) {\n            hmrDispose(assetsToDispose[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n\n        // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n        processedAssets = {};\n        for (let i = 0; i < assetsToAccept.length; i++) {\n          let id = assetsToAccept[i][1];\n          if (!processedAssets[id]) {\n            hmrAccept(assetsToAccept[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n      } else fullReload();\n    }\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html);\n        // $FlowFixMe\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n  ws.onerror = function (e) {\n    if (e.message) {\n      console.error(e.message);\n    }\n  };\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */{\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n  var parents = [];\n  var k, d, dep;\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n  return parents;\n}\nfunction updateLink(link) {\n  var href = link.getAttribute('href');\n  if (!href) {\n    return;\n  }\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n  newLink.setAttribute('href',\n  // $FlowFixMe\n  href.split('?')[0] + '?' + Date.now());\n  // $FlowFixMe\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href /*: string */ = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n    cssTimeout = null;\n  }, 50);\n}\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n      return new Promise((resolve, reject) => {\n        var _document$head;\n        script.onload = () => resolve(script);\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension fix\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3 && typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n            extCtx.runtime.reload();\n            return;\n          }\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n          (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\nfunction hmrApply(bundle /*: ParcelRequire */, asset /*:  HMRAsset */) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      }\n\n      // $FlowFixMe\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    }\n\n    // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n    delete modules[id];\n    delete bundle.cache[id];\n\n    // Now delete the orphans.\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\nfunction hmrAcceptCheck(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  }\n\n  // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n      parents.push(...p);\n    }\n  }\n  return accepted;\n}\nfunction hmrAcceptCheckOne(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n  if (checkedAssets[id]) {\n    return true;\n  }\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToDispose.push([bundle, id]);\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n}\nfunction hmrDispose(bundle /*: ParcelRequire */, id /*: string */) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n  delete bundle.cache[id];\n}\nfunction hmrAccept(bundle /*: ParcelRequire */, id /*: string */) {\n  // Execute the module.\n  bundle(id);\n\n  // Run the accept callbacks in the new version of the module.\n  var cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        assetsToAlsoAccept.forEach(function (a) {\n          hmrDispose(a[0], a[1]);\n        });\n\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n}","const subscribeInputFormEl = document.getElementById('subscribe__input');\nconst subscribeButtonFormEl = document.getElementById('subscribe__button');\n\nif (subscribeButtonFormEl) {\n  subscribeButtonFormEl.addEventListener('click', (e) => {\n    e.preventDefault();\n    if (subscribeInputFormEl && subscribeInputFormEl.value.trim() === '') {\n      alert('Please type your email address.');\n    } else if (\n      subscribeInputFormEl &&\n      !subscribeInputFormEl.value.includes('@')\n    ) {\n      alert('Incorrect e-mail! Try again.');\n    } else {\n      alert('Subscription successful!');\n    }\n  });\n}\n\nconst announcementEl = document.getElementById('announcement');\nconst announcementCloseBtnEl = document.getElementById(\n  'announcement__btn--close'\n);\n\nif (announcementCloseBtnEl) {\n  announcementCloseBtnEl.addEventListener('click', (e) => {\n    if (announcementEl) {\n      announcementEl.classList.add('close');\n    }\n  });\n}\n"],"names":["modules","entry","mainEntry","parcelRequireName","globalName","globalObject","globalThis","self","window","global","previousRequire","cache","nodeRequire","module","require","bind","newRequire","name","jumped","currentRequire","err","Error","code","localRequire","resolve","x","id","module1","Module","call","exports","res","isParcelRequire","moduleName","bundle","parent","register","exports1","Object","defineProperty","get","i","length","mainExports","define","amd","global1","arguments","HMR_BUNDLE_ID","OVERLAY_ID","OldModule","getHostname","location","protocol","indexOf","hostname","getPort","port","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","undefined","WebSocket","checkedAssets","assetsToDispose","assetsToAccept","ws","HMR_SECURE","test","message","console","error","extCtx","browser","chrome","supportsSourceURL","eval","stack","includes","onmessage","event","JSON","parse","type","document","removeErrorOverlay","assets","filter","asset","envHash","every","hmrAcceptCheck","root","depsByBundle","clear","CustomEvent","dispatchEvent","hmrApplyUpdates","processedAssets","hmrDispose","hmrAccept","cached","forEach","cb","assetsToAlsoAccept","getParents","a","apply","reload","runtime","ansiDiagnostic","diagnostics","ansi","codeframe","hints","join","overlay","createErrorOverlay","createElement","errorHTML","diagnostic","frames","reduce","p","frame","encodeURIComponent","map","hint","documentation","innerHTML","html","body","appendChild","onerror","e","onclose","warn","getElementById","remove","log","k","d","dep","parents","Array","isArray","concat","cssTimeout","scriptsToRemove","parcelHotUpdate","create","promises","_hmrDownload","hmrDownload","script","src","url","Date","now","outputFormat","Promise","reject","_document$head","onload","head","importScripts","__parcel__require__","catch","getManifest","manifest_version","ServiceWorkerGlobalScope","all","hmrApply","setTimeout","links","querySelectorAll","href","getAttribute","servedFromHMRServer","RegExp","origin","updateLink","link","newLink","cloneNode","parentNode","removeChild","setAttribute","split","insertBefore","nextSibling","deps","oldDeps","hmrDelete","orphans","output","_document$head2","hmrAcceptCheckOne","accepted","v","shift","subscribeInputFormEl","subscribeButtonFormEl","addEventListener","preventDefault","value","trim","alert","announcementEl","announcementCloseBtnEl","classList","add"],"version":3,"file":"index.089eab22.js.map"}